{"mappings":"ACEA,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,gBAAgB,CAAC,QAAS,SAAC,CAA9B,EACE,IA2BiB,EACX,EACA,EAEA,EA7BF,EAFE,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,MAI9B,EAAG,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAM,CAAzC,EACM,IAAS,GACX,CAAA,EAAQ,CAAA,CAEZ,GAEK,IAiBY,EAbP,EAeJ,EAAO,MAAM,IAAI,CAAC,CADlB,EAAQ,SAAS,aAAa,CAAC,UACP,gBAAgB,CAAC,OAEzC,EAAY,EACf,gBAAgB,CAAC,KAClB,CAAC,EAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,OAEjC,EAAG,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAM,CAAzC,EACM,IAAU,GACZ,EAAK,SAAS,CAAC,MAAM,CAAC,MAAO,OAEjC,GAEA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAU,CAAC,SAAS,CACrD,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAU,CAAC,SAAS,CAErD,EAAU,WAAW,EAAM,OAAO,CAAC,QAAS,KAC5C,EAAU,WAAW,EAAM,OAAO,CAAC,QAAS,YAElD,AACE,EAAM,QAAQ,KAAO,GACrB,EAAM,QAAQ,KAAO,GACrB,MAAM,IACN,MAAM,GAEC,EACH,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,GAEjB,EAAY,EAAU,EAAU,EAAU,CAErD,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,GA9CpC,EAAK,SAAS,CAAC,QAAQ,CAAC,QAC1B,EAAK,SAAS,CAAC,MAAM,CAAC,OACtB,EAAK,SAAS,CAAC,GAAG,CAAC,UACV,EAAK,SAAS,CAAC,QAAQ,CAAC,SACjC,EAAK,SAAS,CAAC,MAAM,CAAC,QAGtB,EAAK,SAAS,CAAC,GAAG,CAAC,QAEvB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tr = document.querySelector(\"tr\");\ntr.addEventListener(\"click\", function(e) {\n    var link = e.target.closest(\"th\");\n    var index;\n    tr.querySelectorAll(\"th\").forEach(function(item, i) {\n        if (item === link) index = i;\n    });\n    if (!link) return;\n    sortTable(index);\n    if (link.classList.contains(\"asc\")) {\n        link.classList.remove(\"asc\");\n        link.classList.add(\"desc\");\n    } else if (link.classList.contains(\"desc\")) {\n        link.classList.remove(\"desc\");\n        link.classList.add(\"asc\");\n    } else link.classList.add(\"asc\");\n});\nfunction sortTable(sortIndex) {\n    var tbody = document.querySelector(\"tbody\");\n    var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    var sortOrder = tr.querySelectorAll(\"th\")[sortIndex].classList.contains(\"asc\");\n    tr.querySelectorAll(\"th\").forEach(function(item, index) {\n        if (index !== sortIndex) item.classList.remove(\"asc\", \"desc\");\n    });\n    rows.sort(function(a, b) {\n        var aText = a.querySelectorAll(\"td\")[sortIndex].innerText;\n        var bText = b.querySelectorAll(\"td\")[sortIndex].innerText;\n        var aNumber = parseFloat(aText.replace(/[$,]/g, \"\"));\n        var bNumber = parseFloat(bText.replace(/[$,]/g, \"\"));\n        if (aText.toString() === aText && bText.toString() === bText && isNaN(aNumber) && isNaN(bNumber)) return sortOrder ? bText.localeCompare(aText) : aText.localeCompare(bText);\n        else return sortOrder ? bNumber - aNumber : aNumber - bNumber;\n    });\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\n\n//# sourceMappingURL=index.f235917a.js.map\n","'use strict';\n\nconst tr = document.querySelector('tr');\n\ntr.addEventListener('click', (e) => {\n  const link = e.target.closest('th');\n\n  let index;\n\n  tr.querySelectorAll('th').forEach((item, i) => {\n    if (item === link) {\n      index = i;\n    }\n  });\n\n  if (!link) {\n    return;\n  }\n\n  sortTable(index);\n\n  if (link.classList.contains('asc')) {\n    link.classList.remove('asc');\n    link.classList.add('desc');\n  } else if (link.classList.contains('desc')) {\n    link.classList.remove('desc');\n    link.classList.add('asc');\n  } else {\n    link.classList.add('asc');\n  }\n});\n\nfunction sortTable(sortIndex) {\n  const tbody = document.querySelector('tbody');\n  const rows = Array.from(tbody.querySelectorAll('tr'));\n\n  const sortOrder = tr\n    .querySelectorAll('th')\n    [sortIndex].classList.contains('asc');\n\n  tr.querySelectorAll('th').forEach((item, index) => {\n    if (index !== sortIndex) {\n      item.classList.remove('asc', 'desc');\n    }\n  });\n\n  rows.sort((a, b) => {\n    const aText = a.querySelectorAll('td')[sortIndex].innerText;\n    const bText = b.querySelectorAll('td')[sortIndex].innerText;\n\n    const aNumber = parseFloat(aText.replace(/[$,]/g, ''));\n    const bNumber = parseFloat(bText.replace(/[$,]/g, ''));\n\n    if (\n      aText.toString() === aText &&\n      bText.toString() === bText &&\n      isNaN(aNumber) &&\n      isNaN(bNumber)\n    ) {\n      return sortOrder\n        ? bText.localeCompare(aText)\n        : aText.localeCompare(bText);\n    } else {\n      return sortOrder ? bNumber - aNumber : aNumber - bNumber;\n    }\n  });\n\n  rows.forEach((row) => tbody.appendChild(row));\n}\n"],"names":["tr","document","querySelector","addEventListener","e","sortIndex","tbody","rows","sortOrder","index","link","target","closest","querySelectorAll","forEach","item","i","Array","from","classList","contains","remove","sort","a","b","aText","innerText","bText","aNumber","parseFloat","replace","bNumber","toString","isNaN","localeCompare","row","appendChild","add"],"version":3,"file":"index.f235917a.js.map"}